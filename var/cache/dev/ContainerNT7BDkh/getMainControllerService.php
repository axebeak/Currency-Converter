<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'App\Controller\MainController' shared autowired service.

include_once $this->targetDirs[3].'\\vendor\\symfony\\framework-bundle\\Controller\\ControllerTrait.php';
include_once $this->targetDirs[3].'\\vendor\\symfony\\framework-bundle\\Controller\\AbstractController.php';
include_once $this->targetDirs[3].'\\src\\Controller\\MainController.php';
include_once $this->targetDirs[3].'\\src\\Service\\FileHelper.php';
include_once $this->targetDirs[3].'\\src\\Service\\APIHelper.php';
include_once $this->targetDirs[3].'\\src\\Service\\RandomHelper.php';
include_once $this->targetDirs[3].'\\src\\Service\\SettingsHelper.php';

$this->services['App\Controller\MainController'] = $instance = new \App\Controller\MainController(new \App\Service\FileHelper($this->getEnv('CURRENCIES')), new \App\Service\APIHelper($this->getEnv('API_LINK'), $this->getEnv('CURRENCIES')), new \App\Service\RandomHelper([], $this->getEnv('CURRENCIES')), new \App\Service\SettingsHelper(($this->targetDirs[3].'/.env')), $this->getEnv('CURRENCIES'));

$instance->setContainer((new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
    'http_kernel' => ['services', 'http_kernel', 'getHttpKernelService', false],
    'parameter_bag' => ['privates', 'parameter_bag', 'getParameterBagService', false],
    'request_stack' => ['services', 'request_stack', 'getRequestStackService', false],
    'router' => ['services', 'router', 'getRouterService', false],
    'session' => ['services', 'session', 'getSessionService.php', true],
    'twig' => ['services', 'twig', 'getTwigService', false],
]))->withContext('App\\Controller\\MainController', $this));

return $instance;
